{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../../../src/database-deprecated/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgZone} from \"@angular/core\";\nimport {FirebaseZoneScheduler} from \"angularfire2\";\nimport * as utils from \"./utils\";\nimport {AFUnwrappedDataSnapshot} from \"./interfaces\";\nimport {FirebaseListObservable} from \"./firebase_list_observable\";\nimport {Observer} from \"rxjs\";\nimport {observeOn, switchMap, map} from \"rxjs/operators\";\nimport {observeQuery} from \"./query_observable\";\nimport {\n  Reference,\n  Query,\n  FirebaseListFactoryOpts,\n  DatabaseReference,\n  DatabaseQuery,\n  DatabaseSnapshot,\n} from \"./interfaces\";\n\nexport function FirebaseListFactory(\n  ref: DatabaseReference,\n  {preserveSnapshot, query = {}}: FirebaseListFactoryOpts = {}\n): FirebaseListObservable<any> {\n  if (utils.isEmptyObject(query)) {\n    return firebaseListObservable(ref, {preserveSnapshot});\n  }\n\n  const queryObs = observeQuery(query);\n  return new FirebaseListObservable(ref, subscriber => {\n    let sub = queryObs\n      .pipe(\n        map(query => {\n          let queried: DatabaseQuery = ref;\n          // Only apply the populated keys\n          // apply ordering and available querying options\n          // eg: ref.orderByChild('height').startAt(3)\n          // Check orderBy\n          if (query.orderByChild) {\n            queried = queried.orderByChild(query.orderByChild);\n          } else if (query.orderByKey) {\n            queried = queried.orderByKey();\n          } else if (query.orderByPriority) {\n            queried = queried.orderByPriority();\n          } else if (query.orderByValue) {\n            queried = queried.orderByValue();\n          }\n\n          // check equalTo\n          if (utils.hasKey(query, \"equalTo\")) {\n            if (utils.hasKey(query.equalTo, \"value\")) {\n              queried = queried.equalTo(query.equalTo.value, query.equalTo.key);\n            } else {\n              queried = queried.equalTo(query.equalTo);\n            }\n\n            if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\n              throw new Error(\"Query Error: Cannot use startAt or endAt with equalTo.\");\n            }\n\n            // apply limitTos\n            if (!utils.isNil(query.limitToFirst)) {\n              // TS is unhappy without the cast below--it thinks `limitToLast` might be undefined.\n              queried = queried.limitToFirst(query.limitToFirst as number);\n            }\n\n            if (!utils.isNil(query.limitToLast)) {\n              // TS is unhappy without the cast below--it thinks `limitToLast` might be undefined.\n              queried = queried.limitToLast(query.limitToLast as number);\n            }\n\n            return queried;\n          }\n\n          // check startAt\n          if (utils.hasKey(query, \"startAt\")) {\n            if (utils.hasKey(query.startAt, \"value\")) {\n              queried = queried.startAt(query.startAt.value, query.startAt.key);\n            } else {\n              queried = queried.startAt(query.startAt);\n            }\n          }\n\n          if (utils.hasKey(query, \"endAt\")) {\n            if (utils.hasKey(query.endAt, \"value\")) {\n              queried = queried.endAt(query.endAt.value, query.endAt.key);\n            } else {\n              queried = queried.endAt(query.endAt);\n            }\n          }\n\n          if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\n            throw new Error(\"Query Error: Cannot use limitToFirst with limitToLast.\");\n          }\n\n          // apply limitTos\n          if (!utils.isNil(query.limitToFirst)) {\n            // TS is unhappy without the cast below--it thinks `limitToLast` might be undefined.\n            queried = queried.limitToFirst(query.limitToFirst as number);\n          }\n\n          if (!utils.isNil(query.limitToLast)) {\n            // TS is unhappy without the cast below--it thinks `limitToLast` might be undefined.\n            queried = queried.limitToLast(query.limitToLast as number);\n          }\n\n          return queried;\n        }),\n        switchMap((queryRef: Reference, ix: number) => {\n          return firebaseListObservable(queryRef, {preserveSnapshot});\n        })\n      )\n      .subscribe(subscriber);\n\n    return () => sub.unsubscribe();\n  });\n}\n\n/**\n * Creates a FirebaseListObservable from a reference or query. Options can be provided as a second\n * parameter. This function understands the nuances of the Firebase SDK event ordering and other\n * quirks. This function takes into account that not all .on() callbacks are guaranteed to be\n * asynchonous. It creates a initial array from a promise of ref.once('value'), and then starts\n * listening to child events. When the initial array is loaded, the observable starts emitting values.\n */\nfunction firebaseListObservable(\n  ref: Reference | DatabaseQuery,\n  {preserveSnapshot}: FirebaseListFactoryOpts = {}\n): FirebaseListObservable<any> {\n  const toValue = preserveSnapshot ? snapshot => snapshot : utils.unwrapMapFn;\n  const toKey = preserveSnapshot ? value => value.key : value => value.$key;\n\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any>) => {\n    // Keep track of callback handles for calling ref.off(event, handle)\n    const handles: {\n      event: string;\n      handle: (a: DatabaseSnapshot, b?: string | null | undefined) => any;\n    }[] = [];\n    let hasLoaded = false;\n    let lastLoadedKey: string = null!;\n    let array: DatabaseSnapshot[] = [];\n\n    // The list children are always added to, removed from and changed within\n    // the array using the child_added/removed/changed events. The value event\n    // is only used to determine when the initial load is complete.\n\n    ref.once(\n      \"value\",\n      (snap: any) => {\n        if (snap.exists()) {\n          snap.forEach((child: any) => {\n            lastLoadedKey = child.key;\n          });\n          if ((<any>array).find((child: any) => toKey(child) === lastLoadedKey)) {\n            hasLoaded = true;\n            obs.next(array);\n          }\n        } else {\n          hasLoaded = true;\n          obs.next(array);\n        }\n      },\n      err => {\n        if (err) {\n          obs.error(err);\n          obs.complete();\n        }\n      }\n    );\n\n    const addFn = ref.on(\n      \"child_added\",\n      (child: any, prevKey: string) => {\n        array = onChildAdded(array, toValue(child), toKey, prevKey);\n        if (hasLoaded) {\n          obs.next(array);\n        } else if (child.key === lastLoadedKey) {\n          hasLoaded = true;\n          obs.next(array);\n        }\n      },\n      err => {\n        if (err) {\n          obs.error(err);\n          obs.complete();\n        }\n      }\n    );\n    handles.push({event: \"child_added\", handle: addFn});\n\n    let remFn = ref.on(\n      \"child_removed\",\n      (child: any) => {\n        array = onChildRemoved(array, toValue(child), toKey);\n        if (hasLoaded) {\n          obs.next(array);\n        }\n      },\n      err => {\n        if (err) {\n          obs.error(err);\n          obs.complete();\n        }\n      }\n    );\n    handles.push({event: \"child_removed\", handle: remFn});\n\n    let chgFn = ref.on(\n      \"child_changed\",\n      (child: any, prevKey: string) => {\n        array = onChildChanged(array, toValue(child), toKey, prevKey);\n        if (hasLoaded) {\n          obs.next(array);\n        }\n      },\n      err => {\n        if (err) {\n          obs.error(err);\n          obs.complete();\n        }\n      }\n    );\n    handles.push({event: \"child_changed\", handle: chgFn});\n\n    return () => {\n      // Loop through callback handles and dispose of each event with handle\n      // The Firebase SDK requires the reference, event name, and callback to\n      // properly unsubscribe, otherwise it can affect other subscriptions.\n      handles.forEach(item => {\n        ref.off(item.event as any, item.handle);\n      });\n    };\n  });\n\n  // TODO: should be in the subscription zone instead\n  // RTM 2018-07-19 REPLACE FOLLOWING BUGGY LINE\n  //  return observeOn.call(listObs, new FirebaseZoneScheduler(new NgZone({}), {}));\n  return listObs.pipe(\n    observeOn(new FirebaseZoneScheduler(new NgZone({}), {}) as any)\n  ) as FirebaseListObservable<any>;\n}\n\nexport function onChildAdded(\n  arr: any[],\n  child: any,\n  toKey: (element: any) => string,\n  prevKey: string\n): any[] {\n  if (!arr.length) {\n    return [child];\n  }\n  return arr.reduce((accumulator: DatabaseSnapshot[], curr: DatabaseSnapshot, i: number) => {\n    if (!prevKey && i === 0) {\n      accumulator.push(child);\n    }\n    accumulator.push(curr);\n    if (prevKey && prevKey === toKey(curr)) {\n      accumulator.push(child);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildChanged(\n  arr: any[],\n  child: any,\n  toKey: (element: any) => string,\n  prevKey: string\n): any[] {\n  const childKey = toKey(child);\n  return arr.reduce((accumulator: any[], val: any, i: number) => {\n    const valKey = toKey(val);\n    if (!prevKey && i == 0) {\n      accumulator.push(child);\n      if (valKey !== childKey) {\n        accumulator.push(val);\n      }\n    } else if (valKey === prevKey) {\n      accumulator.push(val);\n      accumulator.push(child);\n    } else if (valKey !== childKey) {\n      accumulator.push(val);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildRemoved(arr: any[], child: any, toKey: (element: any) => string): any[] {\n  let childKey = toKey(child);\n  return arr.filter(c => toKey(c) !== childKey);\n}\n\nexport function onChildUpdated(\n  arr: any[],\n  child: any,\n  toKey: (element: any) => string,\n  prevKey: string\n): any[] {\n  return arr.map((v, i, arr) => {\n    if (!prevKey && !i) {\n      return child;\n    } else if (i > 0 && toKey(arr[i - 1]) === prevKey) {\n      return child;\n    } else {\n      return v;\n    }\n  });\n}\n"]}